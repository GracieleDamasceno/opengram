version: '3'
services:
  app:
    build:
      context: . 
      dockerfile: Dockerfile
    image: nodejs
    container_name: opengram
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=mongo
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
    - $APPLICATION_PORT:$APPLICATION_PORT
    volumes:
    - .:/home/node/app
    - node_modules:/home/node/app/node_modules
    networks:
    - opengram-network

  mongo:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_DB
      - ME_CONFIG_MONGODB_SERVER=mongo
    ports:
      - "27017:27017"
    volumes:     
      - ./data:/data/db
    networks:
      - opengram-network  

  # mongo-express:
  #   image: mongo-express
  #   container_name: mongo-express
  #   restart: unless-stopped
  #   ports:
  #     - 8081:8081
  #   environment:
  #     - ME_CONFIG_BASICAUTH_USERNAME=$MONGO_EXPRESS_USERNAME
  #     - ME_CONFIG_BASICAUTH_PASSWORD=$MONGO_EXPRESS_PASSWORD
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_USERNAME
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_PASSWORD
  #   depends_on:
  #     - mongo
  #   networks:
  #     - opengram-network
  #   volumes:
  #     - ./data:/data/db

networks:
  opengram-network:
    driver: bridge
volumes:
  dbdata:
  node_modules:  